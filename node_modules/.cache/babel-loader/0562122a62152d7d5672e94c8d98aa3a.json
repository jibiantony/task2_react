{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'; // Define a service using a base URL and expected endpoints\n\nexport const employeeApi = createApi({\n  reducerPath: 'employeeApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:4006/api/'\n  }),\n  endpoints: builder => ({\n    getEmployee: builder.query({\n      providesTags: ['emp-list'],\n      query: () => `employee`\n    }),\n    createEmployee: builder.mutation({\n      invalidatesTags: ['emp-list'],\n      query: payload => ({\n        url: 'employee',\n        method: 'POST',\n        body: payload\n      })\n    }),\n    deleteEmployee: builder.mutation({\n      invalidatesTags: ['emp-list'],\n      query: id => ({\n        url: `employee/${id}`\n      })\n    })\n  })\n}); // Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\n\nexport const {\n  useGetEmployeeQuery,\n  useCreateEmployeeMutation\n} = employeeApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","employeeApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getEmployee","query","providesTags","createEmployee","mutation","invalidatesTags","payload","url","method","body","deleteEmployee","id","useGetEmployeeQuery","useCreateEmployeeMutation"],"sources":["/home/jibi/training/training_react_app/src/service/employee.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\n// Define a service using a base URL and expected endpoints\nexport const employeeApi = createApi({\n  reducerPath: 'employeeApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:4006/api/' }),\n  endpoints: (builder) => ({\n    getEmployee: builder.query({\n      providesTags: ['emp-list'],\n      query: () => `employee`,\n    }),\n    createEmployee: builder.mutation({\n      invalidatesTags: ['emp-list'],\n      query: payload => ({\n        url: 'employee',\n        method: 'POST',\n        body: payload\n\n      })\n    }),\n    deleteEmployee:builder.mutation({\n      invalidatesTags: ['emp-list'],\n      query: id=>({\n        url:`employee/${id}`\n      })\n    })\n  }),\n})\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const { useGetEmployeeQuery, useCreateEmployeeMutation } = employeeApi"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;EACnCG,WAAW,EAAE,aADsB;EAEnCC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAX,CAAD,CAFU;EAGnCC,SAAS,EAAGC,OAAD,KAAc;IACvBC,WAAW,EAAED,OAAO,CAACE,KAAR,CAAc;MACzBC,YAAY,EAAE,CAAC,UAAD,CADW;MAEzBD,KAAK,EAAE,MAAO;IAFW,CAAd,CADU;IAKvBE,cAAc,EAAEJ,OAAO,CAACK,QAAR,CAAiB;MAC/BC,eAAe,EAAE,CAAC,UAAD,CADc;MAE/BJ,KAAK,EAAEK,OAAO,KAAK;QACjBC,GAAG,EAAE,UADY;QAEjBC,MAAM,EAAE,MAFS;QAGjBC,IAAI,EAAEH;MAHW,CAAL;IAFiB,CAAjB,CALO;IAcvBI,cAAc,EAACX,OAAO,CAACK,QAAR,CAAiB;MAC9BC,eAAe,EAAE,CAAC,UAAD,CADa;MAE9BJ,KAAK,EAAEU,EAAE,KAAG;QACVJ,GAAG,EAAE,YAAWI,EAAG;MADT,CAAH;IAFqB,CAAjB;EAdQ,CAAd;AAHwB,CAAD,CAA7B,C,CA0BP;AACA;;AACA,OAAO,MAAM;EAAEC,mBAAF;EAAuBC;AAAvB,IAAqDnB,WAA3D"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jibi/training/training_react_app/src/pages/DisplayEmployee.jsx\",\n    _s = $RefreshSig$();\n\nimport Button from '../components/Button';\nimport InputField from '../components/InputField';\nimport SelectField from '../components/SelectField';\nimport FileField from '../components/FileField';\nimport '../styles/style.css';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useCreateEmployeeMutation, useGetEmployeeByIdQuery } from '../service/employee';\nimport OutputField from '../components/OutputField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmployeeDetails(props) {\n  _s();\n\n  const params = useParams();\n  console.log('params', params);\n  const {\n    data,\n    isFetching\n  } = useGetEmployeeByIdQuery(params.id);\n  const {\n    onCancel\n  } = props; // const [newEmployee, setNewEmployee] = useState(data);\n\n  const navigate = useNavigate(); // const [createEmployee, result] = useCreateEmployeeMutation();\n\n  console.log('data', data); // console.log('new employee',newEmployee);\n  //   const handleChange = (name, value) => {\n  //     console.log(newEmployee);\n  //     setNewEmployee({\n  //       ...newEmployee,\n  //       [name]: value\n  //     })\n  //   }\n  //   const onSubmit=()=>{\n  //     console.log(newEmployee);\n  //     const payload={name:newEmployee.name,role:newEmployee.role}\n  //     createEmployee(payload);\n  //   }\n\n  const OutputFields = [{\n    label: 'Employee Name',\n    name: 'name'\n  }, {\n    label: 'Employee Email',\n    type: 'email',\n    name: 'email'\n  }, {\n    label: 'Employee ID',\n    name: 'id'\n  }, {\n    label: 'Joining Date',\n    type: 'date',\n    name: 'joiningDate'\n  }, {\n    label: 'Experience',\n    name: 'experience'\n  }, {\n    label: 'Address',\n    name: 'address'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"employee-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form-container\",\n        children: OutputFields.map(outputField => {\n          var _data$;\n\n          return /*#__PURE__*/_jsxDEV(OutputField, {\n            label: outputField.label,\n            value: data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$[outputField.name]\n          }, outputField.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this) //   </main>\n  // </div>\n  ;\n}\n\n_s(EmployeeDetails, \"A3n06Paz4OJ8OY65J5yk1vSVt/E=\", false, function () {\n  return [useParams, useGetEmployeeByIdQuery, useNavigate];\n});\n\n_c = EmployeeDetails;\nexport default EmployeeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeDetails\");","map":{"version":3,"names":["Button","InputField","SelectField","FileField","useEffect","useState","useNavigate","useParams","useCreateEmployeeMutation","useGetEmployeeByIdQuery","OutputField","EmployeeDetails","props","params","console","log","data","isFetching","id","onCancel","navigate","OutputFields","label","name","type","map","outputField"],"sources":["/home/jibi/training/training_react_app/src/pages/DisplayEmployee.jsx"],"sourcesContent":["import Button from '../components/Button';\nimport InputField from '../components/InputField';\nimport SelectField from '../components/SelectField';\nimport FileField from '../components/FileField';\nimport '../styles/style.css';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useCreateEmployeeMutation, useGetEmployeeByIdQuery } from '../service/employee';\nimport OutputField from '../components/OutputField';\n\nfunction EmployeeDetails(props) {\n    const params= useParams();\n    console.log('params', params);\n    const { data, isFetching } = useGetEmployeeByIdQuery(params.id);\n    const { onCancel } = props;\n    // const [newEmployee, setNewEmployee] = useState(data);\n    const navigate = useNavigate();\n    // const [createEmployee, result] = useCreateEmployeeMutation();\n    console.log('data', data);\n\n    // console.log('new employee',newEmployee);\n    //   const handleChange = (name, value) => {\n    //     console.log(newEmployee);\n    //     setNewEmployee({\n    //       ...newEmployee,\n    //       [name]: value\n    //     })\n    //   }\n\n    //   const onSubmit=()=>{\n    //     console.log(newEmployee);\n    //     const payload={name:newEmployee.name,role:newEmployee.role}\n    //     createEmployee(payload);\n    //   }\n\n    const OutputFields = [\n        { label: 'Employee Name', name: 'name' },\n        { label: 'Employee Email', type: 'email', name: 'email' },\n        { label: 'Employee ID', name: 'id' },\n        { label: 'Joining Date', type: 'date', name: 'joiningDate' },\n        { label: 'Experience', name: 'experience' },\n        { label: 'Address', name: 'address' }\n    ];\n\n    return (\n        <section id=\"form\">\n            <form id=\"employee-form\">\n                <div id=\"form-container\">\n                    {OutputFields.map(\n                        outputField =>\n                            <OutputField\n                                key={outputField.label}\n                                label={outputField.label}\n                                value={data?.[0]?.[outputField.name]} />\n                    )}\n                </div>\n            </form>\n        </section>\n        //   </main>\n        // </div>\n    );\n}\n\nexport default EmployeeDetails;"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,qBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,yBAAT,EAAoCC,uBAApC,QAAmE,qBAAnE;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAAA;;EAC5B,MAAMC,MAAM,GAAEN,SAAS,EAAvB;EACAO,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;EACA,MAAM;IAAEG,IAAF;IAAQC;EAAR,IAAuBR,uBAAuB,CAACI,MAAM,CAACK,EAAR,CAApD;EACA,MAAM;IAAEC;EAAF,IAAeP,KAArB,CAJ4B,CAK5B;;EACA,MAAMQ,QAAQ,GAAGd,WAAW,EAA5B,CAN4B,CAO5B;;EACAQ,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,IAApB,EAR4B,CAU5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMK,YAAY,GAAG,CACjB;IAAEC,KAAK,EAAE,eAAT;IAA0BC,IAAI,EAAE;EAAhC,CADiB,EAEjB;IAAED,KAAK,EAAE,gBAAT;IAA2BE,IAAI,EAAE,OAAjC;IAA0CD,IAAI,EAAE;EAAhD,CAFiB,EAGjB;IAAED,KAAK,EAAE,aAAT;IAAwBC,IAAI,EAAE;EAA9B,CAHiB,EAIjB;IAAED,KAAK,EAAE,cAAT;IAAyBE,IAAI,EAAE,MAA/B;IAAuCD,IAAI,EAAE;EAA7C,CAJiB,EAKjB;IAAED,KAAK,EAAE,YAAT;IAAuBC,IAAI,EAAE;EAA7B,CALiB,EAMjB;IAAED,KAAK,EAAE,SAAT;IAAoBC,IAAI,EAAE;EAA1B,CANiB,CAArB;EASA,oBACI;IAAS,EAAE,EAAC,MAAZ;IAAA,uBACI;MAAM,EAAE,EAAC,eAAT;MAAA,uBACI;QAAK,EAAE,EAAC,gBAAR;QAAA,UACKF,YAAY,CAACI,GAAb,CACGC,WAAW;UAAA;;UAAA,oBACP,QAAC,WAAD;YAEI,KAAK,EAAEA,WAAW,CAACJ,KAFvB;YAGI,KAAK,EAAEN,IAAF,aAAEA,IAAF,iCAAEA,IAAI,CAAG,CAAH,CAAN,2CAAE,OAAYU,WAAW,CAACH,IAAxB;UAHX,GACSG,WAAW,CAACJ,KADrB;YAAA;YAAA;YAAA;UAAA,QADO;QAAA,CADd;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ,CAcI;EACA;EAfJ;AAiBH;;GAnDQX,e;UACSJ,S,EAEeE,uB,EAGZH,W;;;KANZK,e;AAqDT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}